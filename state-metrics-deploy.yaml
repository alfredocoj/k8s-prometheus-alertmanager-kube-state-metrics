apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-state-metrics
      grafanak8sapp: "true"
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: kube-state-metrics
        grafanak8sapp: "true"
    spec:
      serviceAccountName: kube-state-metrics
      containers:
        - name: kube-state-metrics
          image: quay.io/coreos/kube-state-metrics:v1.7.2
          ##v1.1.0
          imagePullPolicy: Always
          args:
            - --collectors=limitranges
            - --collectors=daemonsets
            - --collectors=deployments
            #- --collectors=limitranges
            - --collectors=nodes
            - --collectors=pods
            #- --collectors=poddisruptionbudgets
            #- --collectors=containers
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=services
            - --collectors=jobs
            - --collectors=statefulsets
            - --collectors=persistentvolumeclaims
            #- --collectors=persistentvolumes
            - --collectors=namespaces
            - --logtostderr
            #- --kubelet-preferred-address-types=InternalIP
            #- --kubelet-insecure-tls
          ports:
            - name: http-metrics
              containerPort: 8080
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
      nodeSelector:
        kubernetes.io/hostname: k8s-node-97
      volumes:
        - name: tmp-dir
          hostPath:
            path: /tmp